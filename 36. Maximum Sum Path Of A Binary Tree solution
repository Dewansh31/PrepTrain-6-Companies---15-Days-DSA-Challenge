/************************************************************

    Following is the BinaryTreeNode class structure

    template <typename T>
    class BinaryTreeNode {
       public:
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
int solve(BinaryTreeNode<int> *root,int &sum){

 

if(root==NULL){

return 0;

}

// getting max sum from left and right subtree

 

int leftsum=solve(root->left,sum);

int rightsum=solve(root->right,sum);

 

// max of root data, left tree including root , right tree including root, and sum of left right and root

 

int maxi=max(max(leftsum+rightsum+root->data,root->data),

max(root->data + leftsum,root->data + rightsum));

 

// updating sum

sum=max(sum,maxi);

 

int singlepath=max(root->data,max(root->data + leftsum,root->data + rightsum));

return singlepath;

}

 

int maxPathSum(BinaryTreeNode<int> *root)

{

// Write your code here

int sum=INT_MIN;

solve(root,sum);

return sum;

 

}

